language: cpp

## Install deps
addons:
    homebrew:
        packages:
            - ninja
            - clang-format
    apt:
        sources:
            - crossbuild-essential-armhf
            - crossbuild-essential-arm64
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
            - ninja-build
            - gcc-8
            - g++-8
            - clang-6.0
            - libmpfr-dev

## Compilations and tests
matrix:
    include:
        ## Linux-gcc-x86
        ## --------------------------------------------------------------------------------------------
        ## SSE2:
        - os: linux
          env:
            - TOOLSET=g++-8
            - SIMD=SSE2
        ## SSE42:
        - os: linux
          env:
            - TOOLSET=g++-8
            - SIMD=SSE42
        ## AVX:
        - os: linux
          env:
            - TOOLSET=g++-8
            - SIMD=AVX
        ## AVX2:
        - os: linux
          env:
            - TOOLSET=g++-8
            - SIMD=AVX2
        ## AVX2+FMA:
        - os: linux
          env:
            - TOOLSET=g++-8
            - SIMD=AVX2
            - SIMD_OPTIONALS=FMA
        ## Linux-clang-x86
        ## --------------------------------------------------------------------------------------------
        ## SSE2:
        - os: linux
          env:
            - TOOLSET=clang++-6.0
            - SIMD=SSE2
        ## SSE42:
        - os: linux
          env:
            - TOOLSET=clang++-6.0
            - SIMD=SSE42
        ## AVX:
        - os: linux
          env:
            - TOOLSET=clang++-6.0
            - SIMD=AVX
        ## AVX2:
        - os: linux
          env:
            - TOOLSET=clang++-6.0
            - SIMD=AVX2
        ## AVX2+FMA:
        - os: linux
          env:
            - TOOLSET=clang++-6.0
            - SIMD=AVX2
            - SIMD_OPTIONALS=FMA
        ## OSX-clang-x86
        ## --------------------------------------------------------------------------------------------
        ## SSE2:
        - os: osx
          env:
            - TOOLSET=clang++
            - SIMD=SSE2
        ## SSE42:
        - os: osx
          env:
            - TOOLSET=clang++
            - SIMD=SSE42
        ## AVX:
        - os: osx
          env:
            - TOOLSET=clang++
            - SIMD=AVX
        ## AVX2:
        - os: osx
          env:
            - TOOLSET=clang++
            - SIMD=AVX2
        ## AVX2+FMA:
        - os: osx
          env:
            - TOOLSET=clang++
            - SIMD=AVX2
            - SIMD_OPTIONALS=FMA
        # Linux-clang-armv7
        # --------------------------------------------------------------------------------------------
        # NEON128:
        - os: linux
          env:
            - TOOLSET_CC=clang-6.0
            - TOOLSET_CXX=clang++-6.0
            - TARGET=arm-linux-gnueabihf
            - SIMD=NEON128
        ## AARCH64:
        - os: linux
          env:
            - TOOLSET_CC=clang-6.0
            - TOOLSET_CXX=clang++-6.0
            - TARGET=arm-linux-gnueabihf
            - SIMD=AARCH64
        ## Linux-clang-aarch64
        ## --------------------------------------------------------------------------------------------
        ## NEON128:
        - os: linux
          env:
            - TOOLSET_CC=clang-6.0
            - TOOLSET_CXX=clang++-6.0
            - TARGET=aarch64-linux-gnu
            - SIMD=NEON128
        ## AARCH64:
        - os: linux
          env:
            - TOOLSET_CC=clang-6.0
            - TOOLSET_CXX=clang++-6.0
            - TARGET=aarch64-linux-gnu
            - SIMD=AARCH64
        ## Windows-MSVC-x86
        ## --------------------------------------------------------------------------------------------
        ## SSE2:
        - os: windows
          env:
            - TOOLSET_CC=cl.exe
            - TOOLSET_CXX=cl.exe
            - SIMD=SSE2
        ## AVX:
        - os: windows
          env:
            - TOOLSET_CC=cl.exe
            - TOOLSET_CXX=cl.exe
            - SIMD=AVX
        ## AVX2:
        - os: windows
          env:
            - TOOLSET_CC=cl.exe
            - TOOLSET_CXX=cl.exe
            - SIMD=AVX2
        ## AVX2+FMA:
        - os: windows
          env:
            - TOOLSET_CC=cl.exe
            - TOOLSET_CXX=cl.exe
            - SIMD=AVX2
            - SIMD_OPTIONALS=FMA

## It seems that travis ignore addons "chocolatey" so do it manually
install:
    - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
        choco install -y python3 ninja;
      fi

## Prepare build
before_script:
    - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
        scripts/travis-windows-env.bat;
        source _env.sh;
        export CMAKE_ARGS="$CMAKE_ARGS -DPYTHON_EXECUTABLE=C:\\Python37\\python";
      fi
    - if [[ ! -z "$TARGET" ]]; then
        export CMAKE_ARGS="$CMAKE_ARGS -DCMAKE_CXX_COMPILER_TARGET=$TARGET";
        export CMAKE_ARGS="$CMAKE_ARGS -DCMAKE_C_COMPILER_TARGET=$TARGET";
      fi
    - mkdir build
    - cd build
    - cmake .. $CMAKE_ARGS
        -DCMAKE_CXX_COMPILER=$TOOLSET_CXX -DCMAKE_C_COMPILER=$TOOLSET_CC
        -DSIMD=$SIMD -DSIMD_OPTIONALS=$SIMD_OPTIONALS
        -GNinja

## Build
script:
    - cmake --build .
    - cmake --build . --target gen.tests
    - cmake --build . --target tests
    - ctest .
